{"version":3,"sources":["components/header.js","components/footer.js","components/task.js","App.js","data/markdown/app_background.js","index.js"],"names":["Header","className","to","Footer","Date","getFullYear","Task","name","id","Button","variant","App","useState","currTask","setCurrTask","tasks","setTasks","source","Form","Group","controlId","FormControl","placeholder","onChange","event","preventDefault","target","value","console","log","InputGroup","Append","onClick","map","task","Index","path","component","ReactDOM","render","document","getElementById"],"mappings":"2LAeeA,EAZA,kBACb,wBAAQC,UAAU,WAAlB,SACE,8BACE,8BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,oBAAID,UAAU,aAAd,6BCEKE,EARA,WACb,OACE,qBAAKF,UAAU,SAAf,SACE,4CAAW,IAAIG,MAAOC,cAAtB,uB,QCWSC,EAbF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,sBAAKC,GAAID,EAAT,UAIE,oBAAIN,UAAU,UAAd,SAAyBM,IACzB,cAACE,EAAA,EAAD,CAAiCC,QAAQ,UAAUT,UAAU,YAA7D,sBACA,cAACQ,EAAA,EAAD,CAAmCC,QAAQ,SAAST,UAAU,YAA9D,4B,yDC6ESU,EArEH,WAAM,MAEgBC,mBAAS,IAFzB,mBAETC,EAFS,KAECC,EAFD,OAIUF,mBAAS,IAJnB,mBAITG,EAJS,KAIFC,EAJE,KAyChB,OACE,qBAAKf,UAAU,OAAf,SACE,sBAAKO,GAAG,UAAR,UACE,cAAC,IAAD,CAAeS,OC/DH,wFDgEZ,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAAtB,UAME,cAACC,EAAA,EAAD,CAAaC,YAAa,cAAeC,SAvC/B,SAACC,GACnBA,EAAMC,iBAENX,EAAYU,EAAME,OAAOC,OACzBC,QAAQC,IAAIhB,MAoCJ,cAACiB,EAAA,EAAWC,OAAZ,UAKE,cAACtB,EAAA,EAAD,CAAQuB,QA9BJ,WACdhB,EAAS,GAAD,mBAAKD,GAAL,CAAYF,KACpBe,QAAQC,IAAId,IA4BF,2BAKLA,EAAMkB,KAAI,SAACC,GAAU,OAAQ,cAAC,EAAD,CAAM3B,KAAM2B,aExE5CC,G,cAAQ,kBACZ,qBAAKlC,UAAU,OAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,8BACE,cAAC,IAAD,CAAOmC,KAAK,IAAIC,UAAW1B,MAE7B,cAAC,EAAD,WAKN2B,IAASC,OAAO,cAAC,EAAD,IAAWC,SAASC,eAAe,W","file":"static/js/main.3c15a307.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => (\n  <header className=\"masthead\">\n    <div>\n      <div>\n        <Link to=\"/\">\n          <h1 className=\"site-title\">To Do!</h1>\n        </Link>\n      </div>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <footer>Â© {new Date().getFullYear()} - Raghu Padma</footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Task = ({ name }) => {\n  return (\n    <div id={name}>\n      {/**\n       * TODO: add an html or bootstrap element that uses the name variable to display an individual task\n       */}\n      <h4 className=\"column5\">{name}</h4>\n      <Button /**onClick={editTask}**/ variant=\"warning\" className=\"column25l\">Edit Me!</Button>\n      <Button /**onClick={deleteTask}**/ variant=\"danger\" className=\"column25r\">Delete Me!</Button>\n    </div>\n  );\n};\n\nexport default Task;\n","import { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { app_background } from \"./data/markdown\";\n\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { Task } from \"./components\";\n\n/**\n * TODO:\n * 1. Complete all the instructions here in App.js\n * 2. Complete all the instructions in the task.js file (also change the footer to your name)\n * 3. Delete these comments & feel free to play around with bootstrap!\n * 4. Optional Challenge: Add buttons to delete tasks!\n */\n\nconst App = () => {\n  // I've already added currTask for you as an example of useState!\n  const [currTask, setCurrTask] = useState(\"\");\n  // follow this example above & with the useState hook, create a variable called tasks. its default value is an empty array []\n  const [tasks, setTasks] = useState([]);\n\n  /**\n   * TODO: create a regular function called handleInput that takes in a parameter called event & updates currTask\n   * using setCurrTask\n   * Hint: event is an object in JavaScript that contains a bunch of information about the element that the user interacted with. In this case\n   * event belongs to the FormControl element, which is where the task is being inputed. We want to find where in the event object, the string\n   * value entered by the user is being stored. In this case, it's stored here: event.target.value\n   */\n  const handleInput = (event) => {\n    event.preventDefault(); // this prevents the page from refreshing when the button is clicked\n    // TODO: call setCurrTask and pass it the string the user inputed\n    setCurrTask(event.target.value);\n    console.log(currTask);\n  };\n\n  /**\n   * TODO: create an arrow function called addTask that adds currTask to the tasks array\n   * Hint: in javascript, you can easily add to an array using the spread (...) operator. This takes\n   * everything in the array and adds the newest element to it\n   * Example: const old_array = [\"hi\", \"bye\"]\n   *          const new_array = [...old_array, \"wow\"] (we're adding the string \"wow\")\n   *          console.log(new_array) -> [\"hi\", \"bye\", \"wow\"]\n   */\n  const addTask = () => {\n    setTasks([...tasks, currTask]);\n    console.log(tasks);\n  };\n\n  // const editTask = () => {\n\n  // }\n\n  // const deleteTask = () => {\n    \n  // }\n\n  return (\n    <div className=\"home\">\n      <div id=\"content\">\n        <ReactMarkdown source={app_background} />\n        <Form>\n          <Form.Group controlId=\"form-input\">\n            {/**\n             * TODO: pass 2 props to the FormControl element\n             * 1. placeholder (string) -> pass a string explaining what the input is for (ex: \"Enter a task!\")\n             * 2. onChange (function) -> pass one of the functions above that handles the user's input\n             */}\n            <FormControl placeholder={\"Add a Task!\"} onChange={handleInput}/>\n            <InputGroup.Append>\n              {/** TODO: Add a prop & add some text to the button\n               * 1. onClick (function) -> pass one of the functions above that handles a task being added\n               * 2. Add text between the open and closing button tags, describing what the button should say\n               */}\n              <Button onClick={addTask}>Enter!</Button>\n            </InputGroup.Append>\n          </Form.Group>\n        </Form>\n        {/*using your tasks array, map through it and pass each task string to the Task component via the name prop*/}\n        {tasks.map((task) => {return (<Task name={task}></Task>)})}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const app_background = `##### An app allowing you to sort your life. \n###### Built with React & Bootstrap!`;\n\nexport default app_background;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport { Header, Footer } from \"./components\";\nimport App from \"./App\";\n\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Index = () => (\n  <div className=\"main\">\n    <BrowserRouter>\n      <Header />\n      <div>\n        <Route path=\"/\" component={App} />\n      </div>\n      <Footer />\n    </BrowserRouter>\n  </div>\n);\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n"],"sourceRoot":""}